# -*- coding: utf-8 -*-
"""
Helper —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏ —Ç–∞ inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞–º–∏.
"""

from telebot import types
from keyboards import main_menu, back_button
from locales import get_text


def send_main_menu(bot, chat_id, text_or_key='back_to_main', message_id=None, user_id=None):
    """
    –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    
    Args:
        bot: TeleBot instance
        chat_id: ID —á–∞—Ç—É
        text_or_key: –¢–µ–∫—Å—Ç –∞–±–æ –∫–ª—é—á –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó
        message_id: ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –π–æ–≥–æ –º–æ–≤–∏
    """
    if any(text_or_key.startswith(emoji) for emoji in ['‚úÖ', '‚¨ÖÔ∏è', 'üëã', '‚ö†Ô∏è', 'üìä', 'üí∞', 'üí∏', 'üîô']):
        text = text_or_key
    else:
        text = get_text(text_or_key, user_id=user_id)
    
    markup = main_menu(user_id=user_id)
    
    if message_id:
        try:
            bot.edit_message_text(
                text,
                chat_id=chat_id,
                message_id=message_id,
                reply_markup=markup
            )
        except Exception:
            bot.send_message(chat_id, text, reply_markup=markup)
    else:
        bot.send_message(chat_id, text, reply_markup=markup)


def send_back_button(bot, chat_id, text, message_id=None):
    """
    –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é –Ω–∞–∑–∞–¥.
    
    Args:
        bot: TeleBot instance
        chat_id: ID —á–∞—Ç—É
        text: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        message_id: ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    markup = back_button()
    
    if message_id:
        try:
            bot.edit_message_text(
                text,
                chat_id=chat_id,
                message_id=message_id,
                reply_markup=markup
            )
        except Exception:
            bot.send_message(chat_id, text, reply_markup=markup)
    else:
        bot.send_message(chat_id, text, reply_markup=markup)


def send_with_keyboard(bot, chat_id, text, keyboard, message_id=None):
    """
    –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞—Å—Ç–æ–º–Ω–æ—é –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é.
    
    Args:
        bot: TeleBot instance
        chat_id: ID —á–∞—Ç—É
        text: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        keyboard: InlineKeyboardMarkup
        message_id: ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    if message_id:
        try:
            bot.edit_message_text(
                text,
                chat_id=chat_id,
                message_id=message_id,
                reply_markup=keyboard
            )
        except Exception:
            bot.send_message(chat_id, text, reply_markup=keyboard)
    else:
        bot.send_message(chat_id, text, reply_markup=keyboard)


def answer_callback(bot, callback_query, text=None, show_alert=False):
    """
    –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ callback query.
    
    Args:
        bot: TeleBot instance
        callback_query: CallbackQuery object
        text: –¢–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
        show_alert: –ü–æ–∫–∞–∑–∞—Ç–∏ —è–∫ alert (True) —á–∏ toast (False)
    """
    bot.answer_callback_query(
        callback_query.id,
        text=text,
        show_alert=show_alert
    )


def create_inline_keyboard_from_dict(items_dict, row_width=2, add_back=True):
    """
    –°—Ç–≤–æ—Ä–∏—Ç–∏ inline-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑—ñ —Å–ª–æ–≤–Ω–∏–∫–∞.
    
    Args:
        items_dict: –°–ª–æ–≤–Ω–∏–∫ {—Ç–µ–∫—Å—Ç: callback_data}
        row_width: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
        add_back: –î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    
    Returns:
        InlineKeyboardMarkup
    """
    from config.callbacks import CALLBACK_BACK_TO_MAIN
    
    markup = types.InlineKeyboardMarkup(row_width=row_width)
    buttons = [
        types.InlineKeyboardButton(text, callback_data=callback_data)
        for text, callback_data in items_dict.items()
    ]
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏
    for i in range(0, len(buttons), row_width):
        row_buttons = buttons[i:i + row_width]
        markup.add(*row_buttons)
    
    if add_back:
        markup.add(
            types.InlineKeyboardButton(
                get_text('menu_back'),
                callback_data=CALLBACK_BACK_TO_MAIN
            )
        )
    
    return markup


def edit_or_send_message(bot, chat_id, message_id, text, reply_markup=None):
    """
    –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ—Å–Ω—É—é—á–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–µ.
    
    Args:
        bot: TeleBot instance
        chat_id: ID —á–∞—Ç—É
        message_id: ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
        text: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        reply_markup: –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    try:
        bot.edit_message_text(
            text,
            chat_id=chat_id,
            message_id=message_id,
            reply_markup=reply_markup
        )
    except Exception:
        bot.send_message(chat_id, text, reply_markup=reply_markup)
